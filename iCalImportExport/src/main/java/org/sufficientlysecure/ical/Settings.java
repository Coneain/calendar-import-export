// Generated by prefgen.py - Do not edit by hand!

package org.sufficientlysecure.ical;

import android.content.SharedPreferences;

public class Settings {
    private SharedPreferences mPreferences;

    public Settings(SharedPreferences preferences) {
        mPreferences = preferences;
    }

    public SharedPreferences getPreferences() {
        return mPreferences;
    }

    public boolean getBoolean(String key) {
        return mPreferences.getBoolean(key, false);
    }

    public void putBoolean(String key, boolean value) {
        mPreferences.edit().putBoolean(key, value).commit();
    }

    public String getString(String key) {
        return mPreferences.getString(key, "");
    }

    public void putString(String key, String value) {
        mPreferences.edit().putString(key, value).commit();
    }

    public boolean getSavePasswords() {
        return mPreferences.getBoolean("save_passwords", false);
    }

    public void setSavePasswords(boolean value) {
        mPreferences.edit().putBoolean("save_passwords", value).commit();
    }

    public boolean getIgnoreDuplicates() {
        return mPreferences.getBoolean("ignore_duplicates", true);
    }

    public void setIgnoreDuplicates(boolean value) {
        mPreferences.edit().putBoolean("ignore_duplicates", value).commit();
    }

    public boolean getKeepUids() {
        return mPreferences.getBoolean("keep_uids", true);
    }

    public void setKeepUids(boolean value) {
        mPreferences.edit().putBoolean("keep_uids", value).commit();
    }

    public boolean getImportReminders() {
        return mPreferences.getBoolean("import_reminders", true);
    }

    public void setImportReminders(boolean value) {
        mPreferences.edit().putBoolean("import_reminders", value).commit();
    }

    public boolean getIcal4jUnfoldingRelaxed() {
        return mPreferences.getBoolean("ical4j.unfolding.relaxed", true);
    }

    public void setIcal4jUnfoldingRelaxed(boolean value) {
        mPreferences.edit().putBoolean("ical4j.unfolding.relaxed", value).commit();
    }

    public boolean getIcal4jParsingRelaxed() {
        return mPreferences.getBoolean("ical4j.parsing.relaxed", true);
    }

    public void setIcal4jParsingRelaxed(boolean value) {
        mPreferences.edit().putBoolean("ical4j.parsing.relaxed", value).commit();
    }

    public boolean getIcal4jCompatibilityOutlook() {
        return mPreferences.getBoolean("ical4j.compatibility.outlook", true);
    }

    public void setIcal4jCompatibilityOutlook(boolean value) {
        mPreferences.edit().putBoolean("ical4j.compatibility.outlook", value).commit();
    }

    public boolean getIcal4jCompatibilityNotes() {
        return mPreferences.getBoolean("ical4j.compatibility.notes", true);
    }

    public void setIcal4jCompatibilityNotes(boolean value) {
        mPreferences.edit().putBoolean("ical4j.compatibility.notes", value).commit();
    }

    public boolean getIcal4jCompatibilityVcard() {
        return mPreferences.getBoolean("ical4j.compatibility.vcard", false);
    }

    public void setIcal4jCompatibilityVcard(boolean value) {
        mPreferences.edit().putBoolean("ical4j.compatibility.vcard", value).commit();
    }

    public boolean getIcal4jValidationRelaxed() {
        return mPreferences.getBoolean("ical4j.validation.relaxed", true);
    }

    public void setIcal4jValidationRelaxed(boolean value) {
        mPreferences.edit().putBoolean("ical4j.validation.relaxed", value).commit();
    }

}
